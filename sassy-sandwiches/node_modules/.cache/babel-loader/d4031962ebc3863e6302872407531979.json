{"ast":null,"code":"import \"@firebase/logger\";\nimport \"@firebase/util\";\nimport \"@firebase/webchannel-wrapper\";\nimport \"tslib\";\nimport { d as r, f as t, U as e } from \"./prebuilt-30db9a88-9b75cc8d.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\n\nfunction i(e) {\n  e.prototype.loadBundle = function (t) {\n    return r(this, t);\n  }, e.prototype.namedQuery = function (r) {\n    return t(this, r);\n  };\n}\n\ni(e);\nexport { i as registerBundle };","map":{"version":3,"sources":["../../index.bundle.ts"],"names":["registerBundle","instance","prototype","loadBundle","data","this","namedQuery","queryName","Firestore"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;SAsBgBA,C,CAAeC,C,EAAAA;AAC7BA,EAAAA,CAAAA,CAASC,SAATD,CAAmBE,UAAnBF,GAAgC,UAE9BG,CAF8B,EAE9BA;AAEA,WAAOD,CAAAA,CAAWE,IAAXF,EAAiBC,CAAjBD,CAAP;GAJFF,EAMAA,CAAAA,CAASC,SAATD,CAAmBK,UAAnBL,GAAgC,UAE9BM,CAF8B,EAE9BA;AAEA,WAAOD,CAAAA,CAAWD,IAAXC,EAAiBC,CAAjBD,CAAP;GAVFL;;;AAcFD,CAAAA,CAAeQ,CAAfR,CAAAA","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Firestore, loadBundle, namedQuery } from './export';\n\n/**\n * Prototype patches bundle loading to Firestore.\n */\nexport function registerBundle(instance: typeof Firestore): void {\n  instance.prototype.loadBundle = function (\n    this: Firestore,\n    data: ArrayBuffer | ReadableStream<Uint8Array> | string\n  ) {\n    return loadBundle(this, data);\n  };\n  instance.prototype.namedQuery = function (\n    this: Firestore,\n    queryName: string\n  ) {\n    return namedQuery(this, queryName);\n  };\n}\n\nregisterBundle(Firestore);\n"]},"metadata":{},"sourceType":"module"}